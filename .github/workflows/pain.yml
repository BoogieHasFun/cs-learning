name: Build and deploy ASP.Net Core app to Azure Web App - dotnet-github-actions

on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths-ignore:
      - "**/*.md"
      - "**/*.gitignore"
      - "**/*.gitattributes"
  pull_request:
    branches:
      - master
    paths-ignore:
      - "**/*.md"
      - "**/*.gitignore"
      - "**/*.gitattributes"

  
   

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_NOLOGO: true
      DOTNET_GENERATE_ASPNET_CERTIFICATE: false
      DOTNET_ADD_GLOBAL_TOOLS_TO_PATH: false
      DOTNET_MULTILEVEL_LOOKUP: 0

    steps:
      - uses: actions/checkout@v2

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "6.0.x"

      - uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
      - name: Build with dotnet (win-64)
        run: dotnet build --configuration Release --runtime win-x64

      - name: Build with dotnet (if win64 doesn't work)
        run: dotnet build --configuration Release 
        
      - name: Test
        run: dotnet test --logger trx --collect:"XPlat Code Coverage"

      - name: Restore global tools
        run: dotnet tool restore

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: .net-app
          path:  /home/runner/work/cs-learning/cs-learning/bin/Release/net6.0/win-x64


  deploy:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: "Production"
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: .net-app
          
  #   - id: new-release
      # You may pin to the exact commit or the version.
      # uses: elgohr/Github-Release-Action@v4
 #       uses: elgohr/Github-Release-Action@v4
 #       with:
  #           title: cs-learning
  #    - name: upload release asset    
  #      uses: actions/upload-release-asset@v1
  #      env:
   #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     upload_url: ${{ steps.new-release.outputs.url }}
    #      asset_path: .net-app
     #     asset_name: netapp
      #    asset_content_type: application/zip
          
